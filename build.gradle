plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'

    id 'com.github.gmazzo.buildconfig' version "2.0.2"
}

group 'bayern.steinbrecher'
version '0.1-rc2-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'io.soabase.record-builder:record-builder-processor:1.19'
    implementation 'io.soabase.record-builder:record-builder-core:1.19'
    implementation 'com.sun.xml.bind:jaxb-ri:3.0.1'

    testImplementation 'org.testng:testng:7.4.0'
}

java {
    modularity.inferModulePath = true
    withSourcesJar()
    withJavadocJar()
}

test {
    useTestNG()
}

buildConfig {
    buildConfigField("String", "LIB_NAME", "\"${project.name}\"")
    buildConfigField("String", "LIB_VERSION", "\"${project.version}\"")
    buildConfigField("long", "BUILD_TIME", "${System.currentTimeMillis()}L")
    packageName("bayern.steinbrecher.sepaxmlgenerator")
}

compileJava {
    options.encoding = 'UTF-8'
    options.release = 16
    options.compilerArgs = [
            // FIXME Use $moduleName or similar
            "--add-reads", "bayern.steinbrecher.SepaXMLGenerator=ALL-UNNAMED"
    ]
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = "${ossrhUsername}"
                password = "${ossrhPassword}"
            }
        }
    }
    publications {
        mavenLibrary(MavenPublication) {
            pom {
                name = "${project.name}"
                description = 'A library for generating multiple SEPA standard XML files from an abstract description'
                url = 'https://steinbrecher.bayern'
                licenses {
                    license {
                        name = 'The Beer-Ware License (Revision 42)'
                    }
                }
                developers {
                    developer {
                        id = 'stefanHuber'
                        name = 'Stefan Huber'
                        email = 'stefan.huber.niedling@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/TrackerSB/SepaXMLGenerator.git'
                    developerConnection = 'scm:git:ssh://github.com/TrackerSB/SepaXMLGenerator.git'
                    url = 'https://github.com/TrackerSB/SepaXMLGenerator'
                }
            }
            from components.java
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenLibrary
}
